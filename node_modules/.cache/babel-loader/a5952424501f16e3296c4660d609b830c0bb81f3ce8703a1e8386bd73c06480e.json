{"ast":null,"code":"import { deleteBatch, getAllStation, deleteById, addStation } from '@/api/station.js';\nimport AMap from '@amap/amap-jsapi-loader';\nconst defaultStationListQuery = {\n  id: null,\n  managerId: null,\n  address: null,\n  pageNum: 1,\n  pageSize: 5\n};\nexport default {\n  name: 'ElectricPileAdminList',\n  data() {\n    return {\n      form: {},\n      tableData: [],\n      StationListQuery: Object.assign({}, defaultStationListQuery),\n      listLoading: true,\n      dialogFormVisible: false,\n      dialogMapVisible: false,\n      total: '',\n      multipleSelection: []\n    };\n  },\n  mounted() {\n    this.initMap();\n    this.setLocal();\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    //选择地址经纬度\n    chooseMap() {\n      this.dialogFormVisible = false;\n      this.dialogMapVisible = true;\n      this.initMap();\n    },\n    returnDialogForm() {\n      this.dialogFormVisible = true;\n      this.dialogMapVisible = false;\n    },\n    //搜索重置\n    resetListForm() {\n      this.StationListQuery = Object.assign({}, defaultStationListQuery);\n      this.load();\n    },\n    handleSearchList() {\n      this.StationListQuery.pageNum = 1;\n      this.load();\n    },\n    //打开新增用户对话框\n    handleAdd() {\n      this.dialogFormVisible = true;\n      this.form = {}; //如果之前有填过值，可以置空 \n    },\n\n    //实现新增用户\n    save() {\n      addStation(this.form).then(res => {\n        if (res.data.code == '200') {\n          this.$message.success(\"保存成功\");\n          this.dialogFormVisible = false;\n          this.load();\n        } else {\n          this.$message.error(\"保存失败\");\n        }\n      });\n    },\n    //编辑用户\n    handleUpdate(index, row) {\n      //编辑\n      this.form = row; //把当前行的数据赋值给form\n      this.dialogFormVisible = true;\n    },\n    //多行选择\n    handleSelectionChange(val) {\n      console.log(val);\n      this.multipleSelection = val;\n    },\n    handleSizeChange(val) {\n      /*传递过来当前是第几页*/\n      console.log(`每页 ${val} 条`);\n      this.StationListQuery.pageSize = val; //获取当前每页显示条数\n      this.load();\n    },\n    handleCurrentChange(val) {\n      /*传递过来当前是第几页*/\n      console.log(`当前页: ${val}`);\n      this.StationListQuery.pageNum = val; //获取当前第几页\n      this.load();\n    },\n    //批量删除\n    delBatch() {\n      let ids = this.multipleSelection.map(v => v.id); //map这个方法可以实现将multipleSelection中的对象扁平化处理。\n      console.log(ids);\n      deleteBatch(ids).then(res => {\n        if (res.data.code == '200' && res.data.data == true) {\n          this.$message.success(\"批量删除成功\");\n          this.load();\n        } else {\n          this.$message.error(\"批量删除失败\");\n        }\n      });\n    },\n    //根据选择行的id删除\n    handleDelete(index, row) {\n      deleteById(row.id).then(res => {\n        if (res.data.code == '200') {\n          this.$message.success(\"删除成功\");\n          this.load();\n        } else {\n          this.$message.error(\"删除失败\");\n        }\n      });\n    },\n    //将请求数据封装为一个方法\n    load() {\n      //使用axios封装的request，获取所有数据        \n      getAllStation(this.StationListQuery).then(res => {\n        this.listLoading = false;\n        console.log(res);\n        this.tableData = res.data.data.list;\n        this.total = res.data.data.total;\n      });\n    },\n    initMap() {\n      AMapLoader.load({\n        key: \"\",\n        // 申请好的Web端开发者Key，首次调用 load 时必填\n        version: \"2.0\",\n        // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\n        plugins: [''] // 需要使用的的插件列表，如比例尺'AMap.Scale'等\n      }).then(AMap => {\n        this.map = new AMap.Map(\"container\", {\n          //设置地图容器id\n          viewMode: \"2D\",\n          //是否为3D地图模式\n          zoom: 5,\n          //初始化地图级别\n          center: [105.602725, 37.076636] //初始化地图中心点位置\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n  }\n};","map":{"version":3,"names":["deleteBatch","getAllStation","deleteById","addStation","AMap","defaultStationListQuery","id","managerId","address","pageNum","pageSize","name","data","form","tableData","StationListQuery","Object","assign","listLoading","dialogFormVisible","dialogMapVisible","total","multipleSelection","mounted","initMap","setLocal","created","load","methods","chooseMap","returnDialogForm","resetListForm","handleSearchList","handleAdd","save","then","res","code","$message","success","error","handleUpdate","index","row","handleSelectionChange","val","console","log","handleSizeChange","handleCurrentChange","delBatch","ids","map","v","handleDelete","list","AMapLoader","key","version","plugins","Map","viewMode","zoom","center","catch","e"],"sources":["src/views/station/list.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-container>\r\n            <el-header>\r\n                <div class=\"text-item\">\r\n                    <el-form :inline=\"true\" :model=\"StationListQuery\">\r\n                        <el-form-item label=\"电站编号\">\r\n                            <el-input v-model=\"StationListQuery.id\" placeholder=\"输入电站编号\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"管理员编号\">\r\n                            <el-input v-model=\"StationListQuery.managerId\" placeholder=\"输入管理员编号\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"地址\">\r\n                            <el-input v-model=\"StationListQuery.address\" placeholder=\"输入地址\"></el-input>\r\n                        </el-form-item>\r\n                        <el-form-item>\r\n                            <el-button type=\"primary\" @click=\"handleSearchList()\">查询</el-button>\r\n                            <el-button type=\"primary\" @click=\"resetListForm()\">重置</el-button>\r\n                        </el-form-item>\r\n                    </el-form>\r\n                </div>\r\n            </el-header>\r\n            <el-main>\r\n                <div class=\"select-delete\">\r\n                    <el-button size=\"small\" style=\"margin-left:5px\" type=\"primary\" @click=\"handleAdd()\">新增<i\r\n                            class=\"el-icon-circle-plus\"></i></el-button>\r\n                    <el-button size=\"small\" style=\"margin-left:5px\" type=\"danger\" @click=\"delBatch()\">批量删除<i\r\n                            class=\"el-icon-remove\"></i></el-button>\r\n                </div>\r\n                <div>\r\n                    <el-table :data=\"tableData\" v-loading=\"listLoading\" @selection-change=\"handleSelectionChange\" border\r\n                        style=\"width: 100%\" :row-style=\"{height:'40px'}\" :cell-style=\"{padding:'0px'}\">\r\n                        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n                        <el-table-column label=\"编号\" width=\"60\" align=\"center\">\r\n                            <template slot-scope=\"scope\">{{scope.row.id}}</template>\r\n                        </el-table-column>\r\n                        <el-table-column label=\"管理员编号\" width=\"120\" align=\"center\">\r\n                            <template slot-scope=\"scope\">{{scope.row.managerId}}</template>\r\n                        </el-table-column>\r\n                        <el-table-column label=\"电站名\" width=\"160\" align=\"center\">\r\n                            <template slot-scope=\"scope\">{{scope.row.name}}</template>\r\n                        </el-table-column>\r\n                        <el-table-column label=\"地址\" width=\"240\" align=\"center\">\r\n                            <template slot-scope=\"scope\">{{scope.row.address}}</template>\r\n                        </el-table-column>\r\n                        <!-- <el-table-column label=\"地图选点\" width=\"100\" align=\"center\">\r\n                            <template slot-scope=\"scope\">\r\n                                <p>\r\n                                    <el-button type=\"primary\" @click=\"handleChoose(scope.$index, scope.row)\"\r\n                                        size=\"small\">选择地址</el-button>\r\n                                </p>\r\n                            </template>\r\n                        </el-table-column> -->\r\n                        <el-table-column label=\"状态\" width=\"90\" align=\"center\">\r\n                            <template slot-scope=\"scope\">\r\n                                <el-tag type=\"success\" effect=\"plain\" v-if=\"scope.row.status==0\">停业中</el-tag>\r\n                                <el-tag type=\"danger\" effect=\"plain\" v-if=\"scope.row.status==1\">营业中</el-tag>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column label=\"建立时间\" width=\"100\" align=\"center\">\r\n                            <template slot-scope=\"scope\">{{scope.row.creatTime | dateFormat}}</template>\r\n                        </el-table-column>\r\n                        <el-table-column label=\"描述\" width=\"200\" align=\"center\">\r\n                            <template slot-scope=\"scope\">{{scope.row.description}}</template>\r\n                        </el-table-column>\r\n                        <el-table-column fixed=\"right\" label=\"操作\" width=\"200\" align=\"center\">\r\n                            <template slot-scope=\"scope\">\r\n                                <p>\r\n                                    <el-button type=\"primary\" @click=\"handleUpdate(scope.$index, scope.row)\"\r\n                                        size=\"small\">编辑</el-button>\r\n                                    <el-button type=\"danger\" @click=\"handleDelete(scope.$index, scope.row)\"\r\n                                        size=\"small\">删除</el-button>\r\n                                </p>\r\n                            </template>\r\n                        </el-table-column>\r\n                    </el-table>\r\n                </div>\r\n            </el-main>\r\n            <el-footer>\r\n                <div class=\"pagination-container\">\r\n                    <el-pagination background @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                        layout=\"total, sizes, prev, pager, next, jumper\" :page-size=\"StationListQuery.pageSize\"\r\n                        :page-sizes=\"[1,5,10]\" :current-page.sync=\"StationListQuery.pageNum\" :total=\"total\">\r\n                    </el-pagination>\r\n                </div>\r\n            </el-footer>\r\n        </el-container>\r\n\r\n        <el-dialog title=\"电站信息\" :visible.sync=\"dialogFormVisible\" width=\"28%\">\r\n            <el-form label-width=\"90px\" size=\"small\">\r\n                <el-form-item label=\"电站名\">\r\n                    <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"管理员编号\">\r\n                    <el-input v-model=\"form.managerId\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"地址\">\r\n                    <el-input v-model=\"form.address\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"地址选择\">\r\n                    <el-button type=\"primary\" @click=\"chooseMap()\">确定</el-button>\r\n                </el-form-item>\r\n                <el-form-item label=\"经度\">\r\n                    <el-input v-model=\"form.longitude\" :disabled=\"true\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"纬度\">\r\n                    <el-input v-model=\"form.latitude\" :disabled=\"true\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"描述\">\r\n                    <el-input v-model=\"form.description\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"save()\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <el-dialog title=\"地址选择\" :visible.sync=\"dialogMapVisible\" width=\"50%\">\r\n            <el-input v-model.trim=\"searchLocation\" placeholder=\"请输入地址搜索\" maxlength=\"30\" clearable @blur=\"getLocation\"\r\n                @keyup.enter.native=\"getLocation\" />\r\n            <div id=\"container\"></div>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button type=\"primary\" @click=\"returnDialogForm()\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import { deleteBatch, getAllStation, deleteById, addStation } from '@/api/station.js';\r\n    import AMap from '@amap/amap-jsapi-loader';\r\n    const defaultStationListQuery = {\r\n        id: null,\r\n        managerId: null,\r\n        address: null,\r\n        pageNum: 1,\r\n        pageSize: 5\r\n    };\r\n    export default {\r\n        name: 'ElectricPileAdminList',\r\n\r\n        data() {\r\n            return {\r\n                form: {},\r\n                tableData: [],\r\n                StationListQuery: Object.assign({}, defaultStationListQuery),\r\n                listLoading: true,\r\n                dialogFormVisible: false,\r\n                dialogMapVisible: false,\r\n                total: '',\r\n                multipleSelection: [],\r\n            };\r\n        },\r\n\r\n        mounted() {\r\n            this.initMap()\r\n            this.setLocal()\r\n\r\n        },\r\n        created() {\r\n            this.load();\r\n        },\r\n\r\n        methods: {\r\n            //选择地址经纬度\r\n            chooseMap() {\r\n                this.dialogFormVisible = false;\r\n                this.dialogMapVisible = true;\r\n                this.initMap();\r\n            },\r\n            returnDialogForm() {\r\n                this.dialogFormVisible = true;\r\n                this.dialogMapVisible = false;\r\n            },\r\n            //搜索重置\r\n            resetListForm() {\r\n                this.StationListQuery = Object.assign({}, defaultStationListQuery);\r\n                this.load();\r\n            },\r\n            handleSearchList() {\r\n                this.StationListQuery.pageNum = 1;\r\n                this.load();\r\n            },\r\n            //打开新增用户对话框\r\n            handleAdd() {\r\n                this.dialogFormVisible = true;\r\n                this.form = {};//如果之前有填过值，可以置空 \r\n            },\r\n            //实现新增用户\r\n            save() {\r\n                addStation(this.form).then(res => {\r\n                    if (res.data.code == '200') {\r\n                        this.$message.success(\"保存成功\");\r\n                        this.dialogFormVisible = false;\r\n                        this.load();\r\n                    } else {\r\n                        this.$message.error(\"保存失败\");\r\n                    }\r\n                })\r\n            },\r\n            //编辑用户\r\n            handleUpdate(index, row) {  //编辑\r\n                this.form = row;//把当前行的数据赋值给form\r\n                this.dialogFormVisible = true;\r\n            },\r\n            //多行选择\r\n            handleSelectionChange(val) {\r\n                console.log(val);\r\n                this.multipleSelection = val;\r\n            },\r\n            handleSizeChange(val) {/*传递过来当前是第几页*/\r\n                console.log(`每页 ${val} 条`);\r\n                this.StationListQuery.pageSize = val;  //获取当前每页显示条数\r\n                this.load();\r\n            },\r\n            handleCurrentChange(val) {/*传递过来当前是第几页*/\r\n                console.log(`当前页: ${val}`);\r\n                this.StationListQuery.pageNum = val;   //获取当前第几页\r\n                this.load();\r\n            },\r\n            //批量删除\r\n            delBatch() {\r\n                let ids = this.multipleSelection.map(v => v.id);//map这个方法可以实现将multipleSelection中的对象扁平化处理。\r\n                console.log(ids);\r\n                deleteBatch(ids).then(res => {\r\n                    if (res.data.code == '200' && res.data.data == true) {\r\n                        this.$message.success(\"批量删除成功\");\r\n                        this.load();\r\n                    } else {\r\n                        this.$message.error(\"批量删除失败\");\r\n                    }\r\n                })\r\n            },\r\n            //根据选择行的id删除\r\n            handleDelete(index, row) {\r\n                deleteById(row.id).then(res => {\r\n                    if (res.data.code == '200') {\r\n                        this.$message.success(\"删除成功\");\r\n                        this.load();\r\n                    } else {\r\n                        this.$message.error(\"删除失败\");\r\n                    }\r\n                })\r\n            },\r\n            //将请求数据封装为一个方法\r\n            load() {\r\n                //使用axios封装的request，获取所有数据        \r\n                getAllStation(this.StationListQuery).then(res => {\r\n                    this.listLoading = false;\r\n                    console.log(res);\r\n                    this.tableData = res.data.data.list;\r\n                    this.total = res.data.data.total;\r\n                })\r\n            },\r\n\r\n            initMap() {\r\n                AMapLoader.load({\r\n                    key: \"\",             // 申请好的Web端开发者Key，首次调用 load 时必填\r\n                    version: \"2.0\",      // 指定要加载的 JSAPI 的版本，缺省时默认为 1.4.15\r\n                    plugins: [''],       // 需要使用的的插件列表，如比例尺'AMap.Scale'等\r\n                }).then((AMap) => {\r\n                    this.map = new AMap.Map(\"container\", {  //设置地图容器id\r\n                        viewMode: \"2D\",    //是否为3D地图模式\r\n                        zoom: 5,           //初始化地图级别\r\n                        center: [105.602725, 37.076636], //初始化地图中心点位置\r\n                    });\r\n                }).catch(e => {\r\n                    console.log(e);\r\n                })\r\n            },\r\n\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .text-item {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n\r\n    .select-delete {\r\n        display: flex;\r\n        justify-content: start;\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    #container {\r\n        width: 600px;\r\n        height: 400px;\r\n    }\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}