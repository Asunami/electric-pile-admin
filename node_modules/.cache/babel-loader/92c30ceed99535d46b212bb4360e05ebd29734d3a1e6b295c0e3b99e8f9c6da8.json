{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport layout from '@/layout/layout.vue';\nVue.use(VueRouter);\nexport const routes = [{\n  path: '/',\n  redirect: '/login'\n}, {\n  path: '/login',\n  name: 'login',\n  component: () => import('@/views/login/index')\n}, {\n  path: '/404',\n  name: '404',\n  component: () => import('@/views/404')\n}\n// {\n//   path: '',\n//   component: Layout,\n//   redirect: '/home',\n//   children: [{\n//     path: 'home',\n//     name: 'home',\n//     component: () => import('@/views/home/index')\n//   }]\n// }\n];\n\nconst router = new VueRouter({\n  routes: routes,\n  mode: 'history'\n});\n\n//重置路由方法\nexport const resetRouter = () => {\n  router.matcher = new VueRouter({\n    mode: 'history',\n    routes: routes\n  });\n};\n\n//刷新页面会重置路由\nexport const setRoutes = () => {\n  const storeMenus = localStorage.getItem(\"menus\");\n  if (storeMenus) {\n    //拼装动态路由\n    const asyncRouterMap = {\n      path: '',\n      name: 'Manage',\n      component: layout,\n      children: []\n    };\n    const menus = JSON.parse(storeMenus);\n    menus.forEach(item => {\n      if (item.path) {\n        //当且仅当path不为空的时候才去设置路由\n        let itemMenu = {\n          path: item.path.replace(\"/\", \"\"),\n          name: item.name,\n          component: () => import('@/views/' + item.pagePath + '.vue')\n        };\n        asyncRouterMap.children.push(itemMenu);\n      } else if (item.children.length) {\n        item.children.forEach(item => {\n          if (item.path) {\n            let itemMenu = {\n              path: item.path.replace(\"/\", \"\"),\n              name: item.name,\n              component: () => import('@/views/' + item.pagePath + '.vue')\n            };\n            asyncRouterMap.children.push(itemMenu);\n          }\n        });\n      }\n    });\n    //获取当前的路由对象名称数组\n    const currentRouteNames = router.getRoutes().map(v => v.name);\n    if (!currentRouteNames.includes('Manage')) {\n      //动态加载到想在的路由对象\n      router.addRoute(asyncRouterMap);\n    }\n  }\n};\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","layout","use","routes","path","redirect","name","component","router","mode","resetRouter","matcher","setRoutes","storeMenus","localStorage","getItem","asyncRouterMap","children","menus","JSON","parse","forEach","item","itemMenu","replace","pagePath","push","length","currentRouteNames","getRoutes","map","v","includes","addRoute"],"sources":["D:/workspace/GraduationDesign/electric-pile-admin/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport layout from '@/layout/layout.vue'\n\nVue.use(VueRouter)\n\nexport const routes = [\n  {\n    path: '/',\n    redirect: '/login'\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: () => import('@/views/login/index'),\n  },\n  {\n    path: '/404',\n    name: '404',\n    component: () => import('@/views/404'),\n  },\n  // {\n  //   path: '',\n  //   component: Layout,\n  //   redirect: '/home',\n  //   children: [{\n  //     path: 'home',\n  //     name: 'home',\n  //     component: () => import('@/views/home/index')\n  //   }]\n  // }\n]\n\nconst router = new VueRouter({\n  routes: routes,\n  mode: 'history'\n})\n\n//重置路由方法\nexport const resetRouter = () => {\n  router.matcher = new VueRouter({\n    mode: 'history',\n    routes: routes\n  })\n}\n\n//刷新页面会重置路由\nexport const setRoutes = () => {\n  const storeMenus = localStorage.getItem(\"menus\");\n  if (storeMenus) {\n    //拼装动态路由\n    const asyncRouterMap =\n    {\n      path: '',\n      name: 'Manage',\n      component: layout,\n      children: [\n      ]\n    }\n\n\n    const menus = JSON.parse(storeMenus)\n    menus.forEach(item => {\n      if (item.path) {//当且仅当path不为空的时候才去设置路由\n        let itemMenu = { path: item.path.replace(\"/\", \"\"), name: item.name, component: () => import('@/views/' + item.pagePath + '.vue') }\n        asyncRouterMap.children.push(itemMenu)\n      } else if (item.children.length) {\n        item.children.forEach(item => {\n          if (item.path) {\n            let itemMenu = { path: item.path.replace(\"/\", \"\"), name: item.name, component: () => import('@/views/' + item.pagePath + '.vue') }\n            asyncRouterMap.children.push(itemMenu)\n          }\n        })\n      }\n    })\n    //获取当前的路由对象名称数组\n    const currentRouteNames = router.getRoutes().map(v => v.name)\n    if (!currentRouteNames.includes('Manage')) {\n      //动态加载到想在的路由对象\n      router.addRoute(asyncRouterMap)\n    }\n  }\n}\n\n\n\nexport default router\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}